regex pattern for cwe-226 and occurance stats for each SoC analyzed

------------------------------------- regex pattern ----------------------------------------

    always @(posedge clk_i)
    begin
	if(~(rst_ni && ~rst_1)) //clear p_c[i] at reset
	begin
	    p_c[0] <= 0;
	    p_c[1] <= 0;
	    p_c[2] <= 0;
	    p_c[3] <= 0;
	end
	else if(en && we)
	    case(address[8:3])
		1: p_c[3] <= reglk_ctrl_i[3] ? p_c[3] : wdata[31:0];
		2: p_c[2] <= reglk_ctrl_i[2] ? p_c[2] : wdata[31:0];
		3: p_c[1] <= reglk_ctrl_i[1] ? p_c[1] : wdata[31:0];
		4: p_c[0] <= reglk_ctrl_i[0] ? p_c[0] : wdata[31:0];
	    endcase
    end

this vulnerability is related to encryption devices, and other secure data transformations. 
After an encryption has occured, the encrypted data is written to p_c, depeding on the value
of the associated register lock. The vulnerability relates to how the unencrypted data is 
handled after this process has occured. Once encrytpion is finished and the data has been 
read, the data bus p_c should be zero'd, to prevent other users from reading the 
unencrypted data after decryption. In the above rtl, this zeroing of values is not performed,
allowing unauthorized users access to sensitive data

This vulnerability is complex, meaning It can't be described using a pattern. As such,
I have not written a regex for it, nor taken occurance statistics.

if *[(] *[~a-zA-Z0-9_\-\.]+ *(==|!=) *(1'b1|1'b0) *[|]+[|]* *[~a-zA-Z0-9_\-\.]+(\[[0-9]+:[0-9]+\]) (==|!=) *[~a-zA-Z0-9_\-\.\']+[)]

----------------------------------- occurance stats -----------------------------------------

core/riscv/riscv_exec.v:279:    v = (x - y);
core/riscv/riscv_exec.v:297:    v = (y - x);
core/riscv/riscv_exec.v:331:        branch_call_r   = (opcode_rd_idx_i == 5'd1); // RA
core/riscv/riscv_exec.v:340:        branch_ret_r        = (opcode_ra_idx_i == 5'd1 && imm12_r[11:0] == 12'b0); // RA
core/riscv/riscv_exec.v:347:        branch_taken_r= (opcode_ra_operand_i == opcode_rb_operand_i);
core/riscv/riscv_exec.v:352:        branch_taken_r= (opcode_ra_operand_i != opcode_rb_operand_i);
core/riscv/riscv_exec.v:367:        branch_taken_r= (opcode_ra_operand_i < opcode_rb_operand_i);
core/riscv/riscv_exec.v:372:        branch_taken_r= (opcode_ra_operand_i >= opcode_rb_operand_i);
core/riscv/riscv_exec.v:415:assign branch_d_request_o = (branch_r && opcode_valid_i && branch_taken_r);
core/riscv/riscv_lsu.v:121:wire issue_lsu_e1_w    = (mem_rd_o || (|mem_wr_o) || mem_writeback_o || mem_invalidate_o || mem_flush_o) && mem_accept_i;
core/riscv/riscv_lsu.v:196:        mem_unaligned_r = (mem_addr_r[1:0] != 2'b0);
core/riscv/riscv_lsu.v:200:    mem_rd_r = (opcode_valid_i && load_inst_w && !mem_unaligned_r);
core/riscv/riscv_lsu.v:315:    mem_cacheable_q  <= (mem_addr_r >= MEM_CACHE_ADDR_MIN && mem_addr_r <= MEM_CACHE_ADDR_MAX) ||
core/riscv/riscv_lsu.v:519:assign valid_o       = (count_q != 0);
core/riscv/riscv_lsu.v:520:assign accept_o      = (count_q != DEPTH);
core/riscv/riscv_mmu.v:142:    wire              idle_w = (state_q == STATE_IDLE);
core/riscv/riscv_mmu.v:145:    wire        resp_mmu_w   = (lsu_out_resp_tag_i[9:7] == 3'b111);
core/riscv/riscv_mmu.v:181:    wire [31:0] lsu_addr_w = (load_w || (|store_w)) ? lsu_in_addr_i : lsu_in_addr_q;
core/riscv/riscv_mmu.v:195:    wire        ifetch_vm_w = (fetch_in_priv_i != `PRIV_MACHINE);
core/riscv/riscv_mmu.v:196:    wire        dfetch_vm_w = (priv_d_i != `PRIV_MACHINE);
core/riscv/riscv_mmu.v:198:    wire        supervisor_i_w = (fetch_in_priv_i == `PRIV_SUPER);
core/riscv/riscv_mmu.v:199:    wire        supervisor_d_w = (priv_d_i == `PRIV_SUPER);
core/riscv/riscv_mmu.v:201:    wire        vm_i_enable_w = (ifetch_vm_w);
core/riscv/riscv_mmu.v:202:    wire        vm_d_enable_w = (vm_enable_w & dfetch_vm_w);
core/riscv/riscv_mmu.v:206:    wire        dtlb_miss_w = (load_w || (|store_w)) & vm_d_enable_w & ~dtlb_hit_w;
core/riscv/riscv_mmu.v:268:                pte_entry_q <= (pte_ppn_w << `MMU_PGSHIFT) | {22'b0, pte_flags_w};
core/riscv/riscv_mmu.v:297:        itlb_valid_q <= (itlb_va_addr_q == fetch_in_pc_i[31:12]); // Fetch TLB still matches incoming request
core/riscv/riscv_mmu.v:335:                pc_fault_r = (~itlb_entry_q[`PAGE_EXEC]) | (~itlb_entry_q[`PAGE_USER]);
core/riscv/riscv_mmu.v:347:    assign fetch_out_rd_o         = (~vm_i_enable_w & fetch_in_rd_i) || (itlb_hit_w & ~pc_fault_r);
core/riscv/riscv_mmu.v:352:    assign fetch_in_accept_o      = (~vm_i_enable_w & fetch_out_accept_i) | (vm_i_enable_w & itlb_hit_w & fetch_out_accept_i) | pc_fault_r;
core/riscv/riscv_mmu.v:407:                load_fault_r = (~dtlb_entry_q[`PAGE_READ]) | (~dtlb_entry_q[`PAGE_USER]);
core/riscv/riscv_mmu.v:426:                    store_fault_r = (~dtlb_entry_q[`PAGE_READ]) | (~dtlb_entry_q[`PAGE_WRITE]);
core/riscv/riscv_mmu.v:430:                store_fault_r = (~dtlb_entry_q[`PAGE_READ]) | (~dtlb_entry_q[`PAGE_WRITE]) | (~dtlb_entry_q[`PAGE_USER]);
core/riscv/riscv_mmu.v:465:            lsu_out_cacheable_r = (lsu_out_addr_w >= MEM_CACHE_ADDR_MIN && lsu_out_addr_w <= MEM_CACHE_ADDR_MAX);
core/riscv/riscv_mmu.v:473:    assign lsu_in_ack_o         = (lsu_out_ack_i & ~resp_mmu_w) | store_fault_q | load_fault_q;
core/riscv/riscv_mmu.v:475:    assign lsu_in_error_o       = (lsu_out_error_i & ~resp_mmu_w) | store_fault_q | load_fault_q;
core/riscv/riscv_mmu.v:480:    assign lsu_in_accept_o      = (~vm_d_enable_w & cpu_accept_w) | (vm_d_enable_w & dtlb_hit_w & cpu_accept_w) | store_fault_r | load_fault_r;
core/riscv/riscv_alu.v:163:            result_r      = (alu_a_i + alu_b_i);
core/riscv/riscv_alu.v:174:            result_r      = (alu_a_i & alu_b_i);
core/riscv/riscv_alu.v:178:            result_r      = (alu_a_i | alu_b_i);
core/riscv/riscv_alu.v:182:            result_r      = (alu_a_i ^ alu_b_i);
core/riscv/riscv_alu.v:189:            result_r      = (alu_a_i < alu_b_i) ? 32'h1 : 32'h0;
core/riscv/riscv_fetch.v:257:assign fetch_valid_o       = (icache_valid_i || skid_valid_q) & !fetch_resp_drop_w;
core/riscv/riscv_decode.v:92:    wire [31:0] fetch_in_instr_w = (fetch_in_fault_page_i | fetch_in_fault_fetch_i) ? 32'b0 : fetch_in_instr_i;
core/riscv/riscv_decode.v:134:    wire [31:0] fetch_in_instr_w = (fetch_in_fault_page_i | fetch_in_fault_fetch_i) ? 32'b0 : fetch_in_instr_i;
core/riscv/riscv_multiplier.v:158:assign writeback_value_o  = (MULT_STAGES == 3) ? result_e3_q : result_e2_q;
core/riscv/riscv_csr_regfile.v:136:        irq_pending_r   = (csr_mip_q & csr_mie_q);
core/riscv/riscv_csr_regfile.v:137:        m_enabled_r     = (csr_mpriv_q < `PRIV_MACHINE) || (csr_mpriv_q == `PRIV_MACHINE && csr_sr_q[`SR_MIE_R]);
core/riscv/riscv_csr_regfile.v:138:        s_enabled_r     = (csr_mpriv_q < `PRIV_SUPER)   || (csr_mpriv_q == `PRIV_SUPER   && csr_sr_q[`SR_SIE_R]);
core/riscv/riscv_csr_regfile.v:146:        irq_pending_r   = (csr_mip_q & csr_mie_q);
core/riscv/riscv_csr_regfile.v:172:wire buffer_mip_w = (csr_ren_i && csr_raddr_i == `CSR_MIP) | (csr_ren_i && csr_raddr_i == `CSR_SIP) | csr_mip_upd_q;
core/riscv/riscv_csr_regfile.v:459:        `CSR_SSTATUS:  csr_sr_r       = (csr_sr_r & ~`CSR_SSTATUS_MASK) | (csr_wdata_i & `CSR_SSTATUS_MASK);
core/riscv/riscv_csr_regfile.v:460:        `CSR_SIP:      csr_mip_r      = (csr_mip_r & ~`CSR_SIP_MASK) | (csr_wdata_i & `CSR_SIP_MASK);
core/riscv/riscv_csr_regfile.v:461:        `CSR_SIE:      csr_mie_r      = (csr_mie_r & ~`CSR_SIE_MASK) | (csr_wdata_i & `CSR_SIE_MASK);
core/riscv/riscv_csr_regfile.v:594:        branch_target_r = (irq_priv_q == `PRIV_MACHINE) ? csr_mtvec_q : csr_stvec_q;
core/riscv/riscv_divider.v:78:wire inst_div_w         = (opcode_opcode_i & `INST_DIV_MASK) == `INST_DIV;
core/riscv/riscv_divider.v:79:wire inst_divu_w        = (opcode_opcode_i & `INST_DIVU_MASK) == `INST_DIVU;
core/riscv/riscv_divider.v:80:wire inst_rem_w         = (opcode_opcode_i & `INST_REM_MASK) == `INST_REM;
core/riscv/riscv_divider.v:81:wire inst_remu_w        = (opcode_opcode_i & `INST_REMU_MASK) == `INST_REMU;
core/riscv/riscv_csr.v:138:    csr_readonly_r  = (opcode_opcode_i[31:30] == 2'd3);
core/riscv/riscv_csr.v:139:    csr_write_r     = (opcode_ra_idx_i != 5'b0) | csrrw_w | csrrwi_w;
core/riscv/riscv_csr.v:141:    data_r          = (csrrwi_w | 
core/riscv/riscv_csr.v:150:wire satp_update_w = (opcode_valid_i && (set_r || clr_r) && csr_write_r && (opcode_opcode_i[31:20] == `CSR_SATP));
core/riscv/riscv_csr.v:229:    rd_valid_e1_q   <= (set_r || clr_r) && ~csr_fault_r;
core/riscv/riscv_pipe_ctrl.v:138:wire branch_misaligned_w = (issue_branch_taken_i && issue_branch_target_i[1:0] != 2'b0);
core/riscv/riscv_pipe_ctrl.v:332:assign stall_o         = (ctrl_e1_q[`PCINFO_DIV] && ~div_complete_i) || ((ctrl_e2_q[`PCINFO_LOAD] | ctrl_e2_q[`PCINFO_STORE]) & ~mem_complete_i);
core/riscv/riscv_xilinx_2r1w.v:99:assign reg_rs1_w       = (ra_i[4] == 1'b0) ? rs1_0_15_w : rs1_16_31_w;
core/riscv/riscv_xilinx_2r1w.v:100:assign reg_rs2_w       = (rb_i[4] == 1'b0) ? rs2_0_15_w : rs2_16_31_w;
core/riscv/riscv_xilinx_2r1w.v:102:assign write_enable_w = (rd0_i != 5'b00000);
core/riscv/riscv_xilinx_2r1w.v:104:assign write_banka_w  = (write_enable_w & (~rd0_i[4]));
core/riscv/riscv_xilinx_2r1w.v:105:assign write_bankb_w  = (write_enable_w & rd0_i[4]);
isa_sim/riscv.cpp:394:            uint32_t idx      = (addr >> (MMU_PGSHIFT+ptshift)) & ((1<<MMU_PTIDXBITS)-1);
isa_sim/riscv.cpp:431:                uint64_t value = (ppn | (vpn & ((((uint64_t)1) << ptshift) - 1))) << MMU_PGSHIFT;
isa_sim/riscv.cpp:889:    int rd          = (opcode & OPCODE_RD_MASK)  >> OPCODE_RD_SHIFT;
isa_sim/riscv.cpp:890:    int rs1         = (opcode & OPCODE_RS1_MASK) >> OPCODE_RS1_SHIFT;
isa_sim/riscv.cpp:891:    int rs2         = (opcode & OPCODE_RS2_MASK) >> OPCODE_RS2_SHIFT;
isa_sim/riscv.cpp:960:        reg_rd = (signed)reg_rs1 < (signed)imm12;
isa_sim/riscv.cpp:968:        reg_rd = (unsigned)reg_rs1 < (unsigned)imm12;
isa_sim/riscv.cpp:984:        reg_rd = (unsigned)reg_rs1 >> shamt;
isa_sim/riscv.cpp:992:        reg_rd = (signed)reg_rs1 >> shamt;
isa_sim/riscv.cpp:1032:        reg_rd = (signed)reg_rs1 < (signed)reg_rs2;
isa_sim/riscv.cpp:1040:        reg_rd = (unsigned)reg_rs1 < (unsigned)reg_rs2;
isa_sim/riscv.cpp:1080:        reg_rd = (unsigned)reg_rs1 >> reg_rs2;
isa_sim/riscv.cpp:1088:        reg_rd = (signed)reg_rs1 >> reg_rs2;
isa_sim/riscv.cpp:1107:        pc = (reg_rs1 + imm12) & ~1;
isa_sim/riscv.cpp:1305:        reg_rd = (signed)reg_rs1 * (signed)reg_rs2;
isa_sim/riscv.cpp:1314:        reg_rd = (int)(res >> 32);
isa_sim/riscv.cpp:1323:        reg_rd = (int)(res >> 32);
isa_sim/riscv.cpp:1332:        reg_rd = (int)(res >> 32);
isa_sim/riscv.cpp:1343:            reg_rd = (signed)reg_rs1 / (signed)reg_rs2;
isa_sim/riscv.cpp:1345:            reg_rd = (unsigned)-1;
isa_sim/riscv.cpp:1354:            reg_rd = (unsigned)reg_rs1 / (unsigned)reg_rs2;
isa_sim/riscv.cpp:1356:            reg_rd = (unsigned)-1;
isa_sim/riscv.cpp:1368:            reg_rd = (signed)reg_rs1 % (signed)reg_rs2;
isa_sim/riscv.cpp:1379:            reg_rd = (unsigned)reg_rs1 % (unsigned)reg_rs2;
isa_sim/riscv.cpp:1435:        uint32_t prev_prv = (m_csr_msr & SR_SPP) ? PRIV_SUPER : PRIV_USER;
isa_sim/riscv.cpp:1522:        uint32_t pending_interrupts = (m_csr_mip & m_csr_mie);
isa_sim/riscv_main.cpp:82:    uint32_t mem_size = (32 * 1024 * 1024);
isa_sim/riscv_main.cpp:106:                max_cycles = (int)strtoul(optarg, NULL, 0);
isa_sim/riscv_inst_dump.cpp:54:    int rd          = (opcode & OPCODE_RD_MASK)  >> OPCODE_RD_SHIFT;
isa_sim/riscv_inst_dump.cpp:55:    int rs1         = (opcode & OPCODE_RS1_MASK) >> OPCODE_RS1_SHIFT;
isa_sim/riscv_inst_dump.cpp:56:    int rs2         = (opcode & OPCODE_RS2_MASK) >> OPCODE_RS2_SHIFT;
isa_sim/memory.h:70:        Mem = (uint32_t*)buf;
isa_sim/memory.h:93:                    data = (Mem[address / 4] >> 16)  & 0xFFFF;
isa_sim/memory.h:95:                    data = (Mem[address / 4] >> 0) & 0xFFFF;
isa_sim/memory.h:105:                        data = (Mem[address / 4] >> 24) & 0xFF;
isa_sim/memory.h:108:                        data = (Mem[address / 4] >> 16) & 0xFF;
isa_sim/memory.h:111:                        data = (Mem[address / 4] >> 8) & 0xFF;
isa_sim/memory.h:114:                        data = (Mem[address / 4] >> 0) & 0xFF;
isa_sim/elf_load.cpp:87:        *start_addr = (uint32_t)ehdr->e_entry;
isa_sim/elf_load.cpp:159:    symtab = (asymbol **)malloc(nsize);
top_cache_axi/tb/tb_axi4_mem.cpp:32:                item.WLAST    = (i == axi_first.ARLEN);
top_cache_axi/tb/testbench.h:117:        size = (size + 31) & ~(32-1);
top_cache_axi/tb/main.cpp:107:            vcd_name = (const char*)argv[i+1];
top_cache_axi/src_v/dcache_mux.v:104:assign mem_cached_rd_o           = (mem_cacheable_i & ~hold_w) ? mem_rd_i : 1'b0;
top_cache_axi/src_v/dcache_mux.v:105:assign mem_cached_wr_o           = (mem_cacheable_i & ~hold_w) ? mem_wr_i : 4'b0;
top_cache_axi/src_v/dcache_mux.v:108:assign mem_cached_invalidate_o   = (mem_cacheable_i & ~hold_w) ? mem_invalidate_i : 1'b0;
top_cache_axi/src_v/dcache_mux.v:109:assign mem_cached_writeback_o    = (mem_cacheable_i & ~hold_w) ? mem_writeback_i : 1'b0;
top_cache_axi/src_v/dcache_mux.v:110:assign mem_cached_flush_o        = (mem_cacheable_i & ~hold_w) ? mem_flush_i : 1'b0;
top_cache_axi/src_v/dcache_mux.v:114:assign mem_uncached_rd_o         = (~mem_cacheable_i & ~hold_w) ? mem_rd_i : 1'b0;
top_cache_axi/src_v/dcache_mux.v:115:assign mem_uncached_wr_o         = (~mem_cacheable_i & ~hold_w) ? mem_wr_i : 4'b0;
top_cache_axi/src_v/dcache_mux.v:118:assign mem_uncached_invalidate_o = (~mem_cacheable_i & ~hold_w) ? mem_invalidate_i : 1'b0;
top_cache_axi/src_v/dcache_mux.v:119:assign mem_uncached_writeback_o  = (~mem_cacheable_i & ~hold_w) ? mem_writeback_i : 1'b0;
top_cache_axi/src_v/dcache_mux.v:120:assign mem_uncached_flush_o      = (~mem_cacheable_i & ~hold_w) ? mem_flush_i : 1'b0;
top_cache_axi/src_v/dcache_mux.v:122:assign mem_accept_o              =(mem_cacheable_i ? mem_cached_accept_i  : mem_uncached_accept_i) & !hold_w;
top_cache_axi/src_v/dcache_if_pmem.v:283:assign valid_o       = (count_q != 0);
top_cache_axi/src_v/dcache_if_pmem.v:284:assign accept_o      = (count_q != DEPTH);
top_cache_axi/src_v/dcache_axi.v:121:wire          req_push_w    = (inport_rd_i || inport_wr_i != 4'b0);
top_cache_axi/src_v/dcache_axi.v:148:wire       req_is_read_w   = (req_can_issue_w ? req_w[68] : 1'b0);
top_cache_axi/src_v/dcache_axi.v:149:wire       req_is_write_w  = (req_can_issue_w ? ~req_w[68] : 1'b0);
top_cache_axi/src_v/dcache_axi.v:171:wire req_last_w = (req_is_write_w && req_len_w == 8'd0 && req_cnt_q == 8'd0);
top_cache_axi/src_v/dcache_axi.v:177:wire res_push_w = (req_is_write_w && req_last_w && accept_w) || (req_is_read_w && accept_w);
top_cache_axi/src_v/dcache_axi.v:194:assign res_valid_w   = (resp_outstanding_q != 2'd0);
top_cache_axi/src_v/dcache_axi.v:195:assign res_accept_w  = (resp_outstanding_q != 2'd2);
top_cache_axi/src_v/dcache_axi.v:339:assign valid_o       = (count_q != 0);
top_cache_axi/src_v/dcache_axi.v:340:assign accept_o      = (count_q != DEPTH);
top_cache_axi/src_v/dcache_pmem_mux.v:130:assign inport0_ack_o       = (select_q == 1'd0) && outport_ack_i;
top_cache_axi/src_v/dcache_pmem_mux.v:131:assign inport0_error_o     = (select_q == 1'd0) && outport_error_i;
top_cache_axi/src_v/dcache_pmem_mux.v:133:assign inport0_accept_o    = (select_i == 1'd0) && outport_accept_i;
top_cache_axi/src_v/dcache_pmem_mux.v:134:assign inport1_ack_o       = (select_q == 1'd1) && outport_ack_i;
top_cache_axi/src_v/dcache_pmem_mux.v:135:assign inport1_error_o     = (select_q == 1'd1) && outport_error_i;
top_cache_axi/src_v/dcache_pmem_mux.v:137:assign inport1_accept_o    = (select_i == 1'd1) && outport_accept_i;
top_cache_axi/src_v/dcache_axi_axi.v:162:wire wr_cmd_accepted_w  = (outport_awvalid_o && outport_awready_i) || awvalid_q;
top_cache_axi/src_v/dcache_axi_axi.v:163:wire wr_data_accepted_w = (outport_wvalid_o  && outport_wready_i)  || wvalid_q;
top_cache_axi/src_v/dcache_axi_axi.v:164:wire wr_data_last_w     = (wvalid_q & wlast_q) || (outport_wvalid_o && outport_wready_i && outport_wlast_o);
top_cache_axi/src_v/dcache_axi_axi.v:188:assign outport_awvalid_o = (inport_valid_w & inport_write_w & ~awvalid_q);
top_cache_axi/src_v/dcache_axi_axi.v:194:assign outport_wvalid_o  = (inport_valid_w & inport_write_w & ~wvalid_q);
top_cache_axi/src_v/dcache_core.v:332:        tag0_write_m_r = (replace_way_q == 0);
top_cache_axi/src_v/dcache_core.v:335:        tag0_write_m_r = (replace_way_q == 0);
top_cache_axi/src_v/dcache_core.v:388:        tag1_write_m_r = (replace_way_q == 1);
top_cache_axi/src_v/dcache_core.v:391:        tag1_write_m_r = (replace_way_q == 1);
top_cache_axi/src_v/dcache_core.v:471:assign                  evict_way_w  = (flushing_q || !tag_hit_any_m_w) && evict_way_r;
top_cache_axi/src_v/dcache_core.v:539:        data0_write_m_r = (pmem_ack_w && replace_way_q == 0) ? 4'b1111 : 4'b0000;
top_cache_axi/src_v/dcache_core.v:545:wire [31:0] data0_data_in_m_w = (state_q == STATE_REFILL) ? pmem_read_data_w : mem_data_m_q;
top_cache_axi/src_v/dcache_core.v:576:        data1_write_m_r = (pmem_ack_w && replace_way_q == 1) ? 4'b1111 : 4'b0000;
top_cache_axi/src_v/dcache_core.v:582:wire [31:0] data1_data_in_m_w = (state_q == STATE_REFILL) ? pmem_read_data_w : mem_data_m_q;
top_cache_axi/src_v/dcache_core.v:873:assign pmem_last_w = (pmem_len_q == 8'd0);
top_cache_axi/src_v/dcache_core.v:922:wire refill_request_w   = (state_q != STATE_REFILL && next_state_r == STATE_REFILL);
top_cache_axi/src_v/dcache_core.v:923:wire evict_request_w    = (state_q == STATE_EVICT) && (evict_way_w || mem_writeback_m_q);
top_cache_axi/src_v/dcache_core.v:926:assign pmem_rd_w         = (refill_request_w || pmem_rd_q);
top_cache_axi/src_v/dcache_core.v:927:assign pmem_wr_w         = (evict_request_w || (|pmem_wr_q)) ? 4'hF : 4'b0;
top_cache_axi/src_v/dcache_core.v:933:assign pmem_len_w        = (refill_request_w || pmem_rd_q || (state_q == STATE_EVICT && pmem_wr0_q)) ? 8'd7 : 8'd0;
top_cache_axi/src_v/icache.v:488:assign req_accept_o = (state_q == STATE_LOOKUP && next_state_r != STATE_REFILL);
top_cache_axi/src_v/icache.v:543:assign axi_arvalid_o = (state_q == STATE_LOOKUP && next_state_r == STATE_REFILL) || axi_arvalid_q;
top_tcm_axi/tb/main.cpp:107:            vcd_name = (const char*)argv[i+1];
top_tcm_axi/src_v/dport_mux.v:113:wire tcm_access_w = (mem_addr_i >= TCM_MEM_BASE && mem_addr_i < (TCM_MEM_BASE + 32'd65536));
top_tcm_axi/src_v/dport_mux.v:121:assign mem_tcm_rd_o         = (tcm_access_w & ~hold_w) ? mem_rd_i : 1'b0;
top_tcm_axi/src_v/dport_mux.v:122:assign mem_tcm_wr_o         = (tcm_access_w & ~hold_w) ? mem_wr_i : 4'b0;
top_tcm_axi/src_v/dport_mux.v:125:assign mem_tcm_invalidate_o = (tcm_access_w & ~hold_w) ? mem_invalidate_i : 1'b0;
top_tcm_axi/src_v/dport_mux.v:126:assign mem_tcm_writeback_o  = (tcm_access_w & ~hold_w) ? mem_writeback_i : 1'b0;
top_tcm_axi/src_v/dport_mux.v:127:assign mem_tcm_flush_o      = (tcm_access_w & ~hold_w) ? mem_flush_i : 1'b0;
top_tcm_axi/src_v/dport_mux.v:131:assign mem_ext_rd_o         = (~tcm_access_w & ~hold_w) ? mem_rd_i : 1'b0;
top_tcm_axi/src_v/dport_mux.v:132:assign mem_ext_wr_o         = (~tcm_access_w & ~hold_w) ? mem_wr_i : 4'b0;
top_tcm_axi/src_v/dport_mux.v:135:assign mem_ext_invalidate_o = (~tcm_access_w & ~hold_w) ? mem_invalidate_i : 1'b0;
top_tcm_axi/src_v/dport_mux.v:136:assign mem_ext_writeback_o  = (~tcm_access_w & ~hold_w) ? mem_writeback_i : 1'b0;
top_tcm_axi/src_v/dport_mux.v:137:assign mem_ext_flush_o      = (~tcm_access_w & ~hold_w) ? mem_flush_i : 1'b0;
top_tcm_axi/src_v/dport_mux.v:139:assign mem_accept_o         =(tcm_access_w ? mem_tcm_accept_i   : mem_ext_accept_i) & !hold_w;
top_tcm_axi/src_v/tcm_mem_pmem.v:123:        calculate_addr_next = (addr & ~mask) | ((addr + 4) & mask);
top_tcm_axi/src_v/tcm_mem_pmem.v:208:        req_rd_q      <= (axi_arlen_i != 0);
top_tcm_axi/src_v/tcm_mem_pmem.v:240:wire       req_push_w = (ram_rd_o || (ram_wr_o != 4'b0)) && ram_accept_i;
top_tcm_axi/src_v/tcm_mem_pmem.v:317:wire write_active_w  = (axi_awvalid_i || req_wr_q) && !req_rd_q && req_fifo_accept_w && (write_prio_w || req_wr_q || !axi_arvalid_i);
top_tcm_axi/src_v/tcm_mem_pmem.v:318:wire read_active_w   = (axi_arvalid_i || req_rd_q) && !req_wr_q && req_fifo_accept_w && (read_prio_w || req_rd_q || !axi_awvalid_i);
top_tcm_axi/src_v/tcm_mem_pmem.v:350:assign resp_accept_w    = (axi_rvalid_o & axi_rready_i) | 
top_tcm_axi/src_v/tcm_mem_pmem.v:434:assign accept_o   = (count != DEPTH);
top_tcm_axi/src_v/tcm_mem_pmem.v:435:assign valid_o    = (count != 0);
top_tcm_axi/src_v/dport_axi.v:114:wire          req_push_w   = (mem_rd_i || mem_wr_i != 4'b0) && res_accept_w;
top_tcm_axi/src_v/dport_axi.v:144:wire res_push_w = (mem_rd_i || mem_wr_i != 4'b0) && req_accept_w;
top_tcm_axi/src_v/dport_axi.v:206:assign write_complete_w = (awvalid_inhibit_q || axi_awready_i) &&
top_tcm_axi/src_v/dport_axi.v:311:assign valid_o       = (count_q != 0);
top_tcm_axi/src_v/dport_axi.v:312:assign accept_o      = (count_q != DEPTH);
top_tcm_wrapper/dport_mux.v:113:wire tcm_access_w = (mem_addr_i >= TCM_MEM_BASE && mem_addr_i < (TCM_MEM_BASE + 32'd65536));
top_tcm_wrapper/dport_mux.v:121:assign mem_tcm_rd_o         = (tcm_access_w & ~hold_w) ? mem_rd_i : 1'b0;
top_tcm_wrapper/dport_mux.v:122:assign mem_tcm_wr_o         = (tcm_access_w & ~hold_w) ? mem_wr_i : 4'b0;
top_tcm_wrapper/dport_mux.v:125:assign mem_tcm_invalidate_o = (tcm_access_w & ~hold_w) ? mem_invalidate_i : 1'b0;
top_tcm_wrapper/dport_mux.v:126:assign mem_tcm_writeback_o  = (tcm_access_w & ~hold_w) ? mem_writeback_i : 1'b0;
top_tcm_wrapper/dport_mux.v:127:assign mem_tcm_flush_o      = (tcm_access_w & ~hold_w) ? mem_flush_i : 1'b0;
top_tcm_wrapper/dport_mux.v:131:assign mem_ext_rd_o         = (~tcm_access_w & ~hold_w) ? mem_rd_i : 1'b0;
top_tcm_wrapper/dport_mux.v:132:assign mem_ext_wr_o         = (~tcm_access_w & ~hold_w) ? mem_wr_i : 4'b0;
top_tcm_wrapper/dport_mux.v:135:assign mem_ext_invalidate_o = (~tcm_access_w & ~hold_w) ? mem_invalidate_i : 1'b0;
top_tcm_wrapper/dport_mux.v:136:assign mem_ext_writeback_o  = (~tcm_access_w & ~hold_w) ? mem_writeback_i : 1'b0;
top_tcm_wrapper/dport_mux.v:137:assign mem_ext_flush_o      = (~tcm_access_w & ~hold_w) ? mem_flush_i : 1'b0;
top_tcm_wrapper/dport_mux.v:139:assign mem_accept_o         =(tcm_access_w ? mem_tcm_accept_i   : mem_ext_accept_i) & !hold_w;
top_tcm_wrapper/tcm_mem_pmem.v:123:        calculate_addr_next = (addr & ~mask) | ((addr + 4) & mask);
top_tcm_wrapper/tcm_mem_pmem.v:216:        req_rd_q      <= (axi_arlen_i != 0);
top_tcm_wrapper/tcm_mem_pmem.v:248:wire       req_push_w = (ram_rd_o || (ram_wr_o != 4'b0)) && ram_accept_i;
top_tcm_wrapper/tcm_mem_pmem.v:325:wire write_active_w  = (axi_awvalid_i || req_wr_q) && !req_rd_q && req_fifo_accept_w && (write_prio_w || req_wr_q || !axi_arvalid_i);
top_tcm_wrapper/tcm_mem_pmem.v:326:wire read_active_w   = (axi_arvalid_i || req_rd_q) && !req_wr_q && req_fifo_accept_w && (read_prio_w || req_rd_q || !axi_awvalid_i);
top_tcm_wrapper/tcm_mem_pmem.v:358:assign resp_accept_w    = (axi_rvalid_o & axi_rready_i) | 
top_tcm_wrapper/tcm_mem_pmem.v:442:assign accept_o   = (count != DEPTH);
top_tcm_wrapper/tcm_mem_pmem.v:443:assign valid_o    = (count != 0);
top_tcm_wrapper/dport_axi.v:124:wire          req_push_w   = (mem_rd_i || mem_wr_i != 4'b0) && res_accept_w;
top_tcm_wrapper/dport_axi.v:154:wire res_push_w = (mem_rd_i || mem_wr_i != 4'b0) && req_accept_w;
top_tcm_wrapper/dport_axi.v:220:assign write_complete_w = (awvalid_inhibit_q || axi_awready_i) &&
top_tcm_wrapper/dport_axi.v:328:assign valid_o       = (count_q != 0);
top_tcm_wrapper/dport_axi.v:329:assign accept_o      = (count_q != DEPTH);

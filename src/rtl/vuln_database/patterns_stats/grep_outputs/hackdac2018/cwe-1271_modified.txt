ips/udma/udma_qspi/rtl/udma_spim_txrx.sv:658:            r_rx_shift_reg <= s_rx_shift_reg;
ips/udma/udma_qspi/rtl/udma_spim_txrx.sv:659:            r_tx_shift_reg <= s_tx_shift_reg;
ips/udma/udma_i2s/rtl/i2s_rx_channel.sv:137:            r_fifo_data_filter_pos_valid <= 0;
ips/udma/udma_i2s/rtl/i2s_rx_channel.sv:138:            r_fifo_data_filter_neg_valid <= 0;
ips/udma/udma_i2s/rtl/i2s_rx_channel.sv:147:                    r_fifo_data_filter_pos_valid <= s_cic_result_valid_pos;
ips/udma/udma_i2s/rtl/i2s_rx_channel.sv:148:                    r_fifo_data_filter_neg_valid <= s_cic_result_valid_neg;
ips/udma/udma_i2s/rtl/i2s_rx_channel.sv:160:                            r_fifo_data_filter_pos_valid <= s_cic_result_valid_pos;
ips/udma/udma_i2s/rtl/i2s_rx_channel.sv:164:                                r_fifo_data_filter_neg_valid <= 1'b1;
ips/udma/udma_i2s/rtl/i2s_rx_channel.sv:168:                            r_fifo_data_filter_neg_valid <= s_cic_result_valid_neg;                            
ips/udma/udma_i2s/rtl/i2s_rx_channel.sv:172:                                r_fifo_data_filter_pos_valid <= 1'b1;
ips/udma/udma_i2s/rtl/i2s_rx_channel.sv:178:                            r_fifo_data_filter_neg_valid <= 1'b1;
ips/udma/udma_i2s/rtl/i2s_rx_channel.sv:180:                            r_fifo_data_filter_pos_valid <= 1'b1;
ips/udma/udma_i2s/rtl/i2s_rx_channel.sv:186:                r_fifo_data_filter_pos_valid <= 0;
ips/udma/udma_i2s/rtl/i2s_rx_channel.sv:187:                r_fifo_data_filter_neg_valid <= 0;
ips/udma/udma_i2s/rtl/i2s_rx_channel.sv:222:                    r_shiftreg_pos[r_counter] <= sd_i;
ips/udma/udma_i2s/rtl/i2s_rx_channel.sv:247:                    r_shiftreg_neg[r_counter] <= sd_i;
ips/udma/udma_i2s/rtl/i2s_rx_channel.sv:249:                        r_shiftreg_neg[32] <= r_shiftreg_neg[0];
ips/udma/udma_i2s/rtl/i2s_rx_channel.sv:275:            fifo_err_o  <= 1'b0;
ips/udma/udma_i2s/rtl/i2s_rx_channel.sv:280:                fifo_err_o  <= 1'b0;
ips/udma/udma_i2s/rtl/i2s_rx_channel.sv:282:                fifo_err_o  <= 1'b1;
ips/udma/udma_i2s/rtl/udma_i2s_reg_if.sv:277:                    r_i2s_shift[0]       <= cfg_data_i[18:16];
ips/udma/udma_i2s/rtl/udma_i2s_reg_if.sv:284:                    r_i2s_shift[1]       <= cfg_data_i[18:16];
ips/udma/udma_core/rtl/common/io_shiftreg.sv:63:            shift_reg <= shift_reg_next;
ips/udma/udma_core/rtl/common/udma_ctrl.sv:212:            r_au_shift             <= 0;
ips/udma/udma_core/rtl/common/udma_ctrl.sv:309:                    r_au_shift             <= cfg_data_i[20:16];
ips/udma/udma_core/rtl/core/udma_ch_addrgen.sv:105:      else if (r_en && int_ch_grant_i && int_not_stall_i && (r_counters <= s_datasize_toadd))
ips/hwpe-stream/tb/tb_hwpe_stream_source_realign.sv:278:      verif_ctr_in <= 0;
ips/hwpe-stream/tb/tb_hwpe_stream_source_realign.sv:282:        verif_ctr_in <= verif_ctr_in + strb_popcount*8;
ips/hwpe-stream/tb/tb_hwpe_stream_source_realign.sv:283:        verif_vector_in <= next_verif_vector_in;
ips/hwpe-stream/tb/tb_hwpe_stream_source_realign.sv:286:        verif_ctr_in <= 0;
ips/hwpe-stream/tb/tb_hwpe_stream_source_realign.sv:290:        verif_ctr_in <= verif_ctr_in + DS;
ips/hwpe-stream/tb/tb_hwpe_stream_source_realign.sv:291:        verif_vector_in <= next_verif_vector_in;
ips/hwpe-stream/tb/tb_hwpe_stream_source_realign.sv:307:      verif_ctr_out <= 0;
ips/hwpe-stream/tb/tb_hwpe_stream_source_realign.sv:310:      verif_ctr_out <= 0;
ips/hwpe-stream/tb/tb_hwpe_stream_source_realign.sv:314:      verif_ctr_out <= verif_ctr_out + DS;
ips/hwpe-stream/tb/tb_hwpe_stream_source_realign.sv:315:      verif_vector_out <= next_verif_vector_out;
ips/hwpe-stream/tb/tb_hwpe_stream_sink_realign.sv:259:      verif_ctr_out <= 0;
ips/hwpe-stream/tb/tb_hwpe_stream_sink_realign.sv:263:        verif_ctr_out <= verif_ctr_out + strb_popcount*8;
ips/hwpe-stream/tb/tb_hwpe_stream_sink_realign.sv:264:        verif_vector_out <= next_verif_vector_out;
ips/hwpe-stream/tb/tb_hwpe_stream_sink_realign.sv:267:        verif_ctr_out <= 0;
ips/hwpe-stream/tb/tb_hwpe_stream_sink_realign.sv:271:        verif_ctr_out <= verif_ctr_out + DS;
ips/hwpe-stream/tb/tb_hwpe_stream_sink_realign.sv:272:        verif_vector_out <= next_verif_vector_out;
ips/hwpe-stream/tb/tb_hwpe_stream_sink_realign.sv:288:      verif_ctr_in <= 0;
ips/hwpe-stream/tb/tb_hwpe_stream_sink_realign.sv:291:      verif_ctr_in <= 0;
ips/hwpe-stream/tb/tb_hwpe_stream_sink_realign.sv:295:      verif_ctr_in <= verif_ctr_in + DS;
ips/hwpe-stream/tb/tb_hwpe_stream_sink_realign.sv:296:      verif_vector_in <= next_verif_vector_in;
ips/jtag_pulp/src/tap_top.v:246:    shift_dr<= 1'b0;
ips/jtag_pulp/src/tap_top.v:248:    shift_dr<= 1'b0;
ips/jtag_pulp/src/tap_top.v:251:    shift_dr<= 1'b1;
ips/jtag_pulp/src/tap_top.v:253:    shift_dr<= 1'b0;
ips/jtag_pulp/src/tap_top.v:344:    shift_ir<= 1'b0;
ips/jtag_pulp/src/tap_top.v:346:    shift_ir<= 1'b0;
ips/jtag_pulp/src/tap_top.v:349:    shift_ir<= 1'b1;
ips/jtag_pulp/src/tap_top.v:351:    shift_ir<= 1'b0;
ips/jtag_pulp/src/tap_top.v:587:  shift_ir_neg <=  shift_ir;
ips/apb_interrupt_cntrl/apb_interrupt_cntrl.sv:206:        r_fifo_event <= s_event_fifo_data;
ips/riscv/verilator-model/dp_ram.sv:68:        if (be_b_i[0]) mem[addr_b_int    ] <= wdata_b_i[ 0+:8];
ips/riscv/verilator-model/dp_ram.sv:69:        if (be_b_i[1]) mem[addr_b_int + 1] <= wdata_b_i[ 8+:8];
ips/riscv/verilator-model/dp_ram.sv:70:        if (be_b_i[2]) mem[addr_b_int + 2] <= wdata_b_i[16+:8];
ips/riscv/verilator-model/dp_ram.sv:71:        if (be_b_i[3]) mem[addr_b_int + 3] <= wdata_b_i[24+:8];
ips/hwpe-mac-engine/rtl/f_permutation.v:37:      if (reset) i <= 0;
ips/hwpe-mac-engine/rtl/f_permutation.v:41:      if (reset) calc <= 0;
ips/hwpe-mac-engine/rtl/padder.v:56:/*    if (f_ack)  i <= 0; */
ips/zero-riscy/zeroriscy_multdiv_slow.sv:182:                        op_a_shift_q   <= op_a_ext << 1;
ips/zero-riscy/zeroriscy_multdiv_slow.sv:184:                        op_b_shift_q   <= op_b_ext >> 1;
ips/zero-riscy/zeroriscy_multdiv_slow.sv:188:                        op_a_shift_q   <= op_a_ext;
ips/zero-riscy/zeroriscy_multdiv_slow.sv:190:                        op_b_shift_q   <= op_b_ext >> 1;
ips/zero-riscy/zeroriscy_multdiv_slow.sv:221:                    op_b_shift_q     <= sign_b ? alu_adder_i : op_b_i;
ips/zero-riscy/zeroriscy_multdiv_slow.sv:232:                        op_a_shift_q   <= op_a_shift_q << 1;
ips/zero-riscy/zeroriscy_multdiv_slow.sv:233:                        op_b_shift_q   <= op_b_shift_q >> 1;
ips/zero-riscy/zeroriscy_multdiv_slow.sv:237:                        op_a_shift_q   <= op_a_shift_q;
ips/zero-riscy/zeroriscy_multdiv_slow.sv:238:                        op_b_shift_q   <= op_b_shift_q >> 1;
ips/zero-riscy/zeroriscy_multdiv_slow.sv:242:                        op_a_shift_q   <= next_quotient;
ips/adv_dbg_if/rtl/adbg_axi_biu.sv:336:      if(!rd_wrn_i) data_in_reg <= swapped_data_i;
ips/adv_dbg_if/rtl/adbg_axi_biu.sv:345:    if(~trstn_i)               str_sync <= 1'b0;
ips/adv_dbg_if/rtl/adbg_axi_biu.sv:346:    else if(strobe_i && rdy_o) str_sync <= ~str_sync;
ips/adv_dbg_if/rtl/adbg_axi_biu.sv:475:      if(!axi_aresetn) err_reg <= 1'b0;
ips/adv_dbg_if/rtl/adbg_axi_biu.sv:476:      else if(err_en) err_reg <= wr_reg ? ((axi_master_b_resp == 2'b00) ? 1'b0 : 1'b1) : ((axi_master_r_resp == 2'b00) ? 1'b0 : 1'b1);
ips/adv_dbg_if/rtl/adbg_axi_biu.sv:482:    if(!axi_aresetn)   data_out_reg <= 32'h0;
ips/adv_dbg_if/rtl/adbg_axi_biu.sv:483:    else if(data_o_en) data_out_reg <= swapped_data_out;
ips/adv_dbg_if/rtl/adbg_axi_biu.sv:489:    if(!axi_aresetn)     rdy_sync <= 1'b0;
ips/adv_dbg_if/rtl/adbg_axi_biu.sv:490:    else if(rdy_sync_en) rdy_sync <= ~rdy_sync;
ips/adv_dbg_if/rtl/adbg_axi_biu.sv:502:    if(~axi_aresetn) axi_fsm_state <= S_IDLE;
ips/adv_dbg_if/rtl/syncflop.v:96:	if(~RESETN) sync1 <= 1'b0;
ips/adv_dbg_if/rtl/syncflop.v:104:	if(~RESETN) sync2 <= 1'b0;
ips/adv_dbg_if/rtl/syncflop.v:112:	if(~RESETN) syncprev <= 1'b0;
ips/adv_dbg_if/rtl/syncflop.v:120:	if(~RESETN)         srflop <= 1'b0;
ips/adv_dbg_if/rtl/syncflop.v:121:	else if(D_RST)    srflop <= 1'b0;
ips/adv_dbg_if/rtl/syncflop.v:122:	else if (srinput) srflop <= 1'b1;
ips/adv_dbg_if/rtl/adbg_axi_module.sv:411:      if(~trstn_i)          bit_count <= 6'h0;
ips/adv_dbg_if/rtl/adbg_axi_module.sv:412:      else if(bit_ct_rst)   bit_count <= 6'h0;
ips/adv_dbg_if/rtl/adbg_axi_module.sv:413:      else if(bit_ct_en)    bit_count <= bit_count + 6'h1;
ips/adv_dbg_if/rtl/adbg_axi_module.sv:445:      else if(out_reg_ld_en) data_out_shift_reg <= out_reg_data;
ips/adv_dbg_if/rtl/adbg_lint_biu.sv:249:      if(!rd_wrn_i) data_in_reg <= swapped_data_i;
ips/adv_dbg_if/rtl/adbg_lint_biu.sv:258:    if(~trstn_i)               str_sync <= 1'b0;
ips/adv_dbg_if/rtl/adbg_lint_biu.sv:259:    else if(strobe_i && rdy_o) str_sync <= ~str_sync;
ips/adv_dbg_if/rtl/adbg_lint_biu.sv:331:      if(!rstn_i) err_reg <= 1'b0;
ips/adv_dbg_if/rtl/adbg_lint_biu.sv:332:      else if(err_en) err_reg <= 1'b0; //TODO check if lint can return err
ips/adv_dbg_if/rtl/adbg_lint_biu.sv:338:    if(!rstn_i)   data_out_reg <= 32'h0;
ips/adv_dbg_if/rtl/adbg_lint_biu.sv:339:    else if(data_o_en) data_out_reg <= swapped_data_out;
ips/adv_dbg_if/rtl/adbg_lint_biu.sv:345:    if(!rstn_i)     rdy_sync <= 1'b0;
ips/adv_dbg_if/rtl/adbg_lint_biu.sv:346:    else if(rdy_sync_en) rdy_sync <= ~rdy_sync;
ips/adv_dbg_if/rtl/adbg_lint_biu.sv:358:    if(~rstn_i) lint_fsm_state <= S_IDLE;
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:349:            data_out_shift_reg <= 32'h0;
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:351:            data_out_shift_reg <= out_reg_data;
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:456:           if(word_count_zero) module_next_state <= STATE_idle;  // set up a burst of size 0, illegal.
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:461:           if(module_select_i && capture_dr_i) module_next_state <= STATE_Rstatus;
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:466:           if(update_dr_i) module_next_state <= STATE_idle;
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:467:           else if (biu_ready) module_next_state <= STATE_Rburst;
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:472:           if(update_dr_i) module_next_state <= STATE_idle;
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:473:           else if(bit_count_max && word_count_zero) module_next_state <= STATE_Rcrc;
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:478:           if(update_dr_i) module_next_state <= STATE_idle;
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:485:           if(word_count_zero) module_next_state <= STATE_idle;
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:486:           else if(module_select_i && capture_dr_i) module_next_state <= STATE_Wwait;
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:491:           if(update_dr_i)  module_next_state <= STATE_idle;  // client terminated early
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:492:           else if(module_select_i && data_register_i[56]) module_next_state <= STATE_Wburst; // Got a start bit
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:497:           if(update_dr_i)  module_next_state <= STATE_idle;  // client terminated early
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:500:                if(word_count_zero) module_next_state <= STATE_Wcrc;
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:507:           if(update_dr_i)  module_next_state <= STATE_idle;  // client terminated early
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:508:           else if(word_count_zero) module_next_state <= STATE_Wcrc;
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:517:           if(update_dr_i)  module_next_state <= STATE_idle;  // client terminated early
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:518:           else if(bit_count_32) module_next_state <= STATE_Wmatch;
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:524:           if(update_dr_i)  module_next_state <= STATE_idle;
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:548:    out_reg_shift_en <= 1'b0;  // Enable shift of data_out_shift_reg
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:554:    crc_shift_en <= 1'b0;
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:568:           if(module_select_i & shift_dr_i) out_reg_shift_en <= 1'b1; // For module regs
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:575:             if(intreg_instruction) regsel_ld_en <= 1'b1;  // For module regs
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:576:             if(intreg_write)       intreg_ld_en <= 1'b1;  // For module regs
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:577:             if(burst_instruction)  cpusel_ld_en <= 1'b1;
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:626:           out_reg_shift_en <= 1'b1;
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:652:           crc_shift_en <= 1'b1;
ips/adv_dbg_if/rtl/adbg_or1k_module.sv:712:               if(module_next_state == STATE_Wmatch) tdo_output_sel <= 2'h2;  // This is when the 'match' bit is actually read
ips/adv_dbg_if/rtl/adbg_lint_module.sv:304:    if(~trstn_i)             bit_count <= 6'h0;
ips/adv_dbg_if/rtl/adbg_lint_module.sv:305:    else if(bit_ct_rst)  bit_count <= 6'h0;
ips/adv_dbg_if/rtl/adbg_lint_module.sv:306:    else if(bit_ct_en)    bit_count <= bit_count + 6'h1;
ips/adv_dbg_if/rtl/adbg_lint_module.sv:339:    else if(out_reg_ld_en) data_out_shift_reg <= out_reg_data;
ips/adv_dbg_if/rtl/adbg_lint_module.sv:346:    if(tdo_output_sel == 2'h0) module_tdo_o <= biu_ready;
ips/adv_dbg_if/rtl/adbg_lint_module.sv:347:    else if(tdo_output_sel == 2'h1) module_tdo_o <= data_out_shift_reg[0];
ips/adv_dbg_if/rtl/adbg_lint_module.sv:348:    else if(tdo_output_sel == 2'h2) module_tdo_o <= crc_match;
ips/adv_dbg_if/rtl/adbg_lint_module.sv:447:           if(word_count_zero) module_next_state <= STATE_idle;  // set up a burst of size 0, illegal.
ips/adv_dbg_if/rtl/adbg_lint_module.sv:452:           if(module_select_i && capture_dr_i) module_next_state <= STATE_Rstatus;
ips/adv_dbg_if/rtl/adbg_lint_module.sv:457:           if(update_dr_i) module_next_state <= STATE_idle;
ips/adv_dbg_if/rtl/adbg_lint_module.sv:458:           else if (biu_ready) module_next_state <= STATE_Rburst;
ips/adv_dbg_if/rtl/adbg_lint_module.sv:463:           if(update_dr_i) module_next_state <= STATE_idle;
ips/adv_dbg_if/rtl/adbg_lint_module.sv:464:           else if(bit_count_max && word_count_zero) module_next_state <= STATE_Rcrc;
ips/adv_dbg_if/rtl/adbg_lint_module.sv:469:           if(update_dr_i) module_next_state <= STATE_idle;
ips/adv_dbg_if/rtl/adbg_lint_module.sv:476:           if(word_count_zero) module_next_state <= STATE_idle;
ips/adv_dbg_if/rtl/adbg_lint_module.sv:477:           else if(module_select_i && capture_dr_i) module_next_state <= STATE_Wwait;
ips/adv_dbg_if/rtl/adbg_lint_module.sv:482:           if(update_dr_i)  module_next_state <= STATE_idle;  // client terminated early
ips/adv_dbg_if/rtl/adbg_lint_module.sv:483:           else if(module_select_i && data_register_i[63]) module_next_state <= STATE_Wburst; // Got a start bit
ips/adv_dbg_if/rtl/adbg_lint_module.sv:488:           if(update_dr_i)  module_next_state <= STATE_idle;  // client terminated early
ips/adv_dbg_if/rtl/adbg_lint_module.sv:491:            if(word_count_zero) module_next_state <= STATE_Wcrc;
ips/adv_dbg_if/rtl/adbg_lint_module.sv:498:           if(update_dr_i)  module_next_state <= STATE_idle;  // client terminated early
ips/adv_dbg_if/rtl/adbg_lint_module.sv:499:           else if(word_count_zero) module_next_state <= STATE_Wcrc;
ips/adv_dbg_if/rtl/adbg_lint_module.sv:508:           if(update_dr_i)  module_next_state <= STATE_idle;  // client terminated early
ips/adv_dbg_if/rtl/adbg_lint_module.sv:509:           else if(bit_count_32) module_next_state <= STATE_Wmatch;
ips/adv_dbg_if/rtl/adbg_lint_module.sv:515:           if(update_dr_i)  module_next_state <= STATE_idle;
ips/adv_dbg_if/rtl/adbg_lint_module.sv:539:    out_reg_shift_en <= 1'b0;  // Enable shift of data_out_shift_reg
ips/adv_dbg_if/rtl/adbg_lint_module.sv:545:    crc_shift_en <= 1'b0;
ips/adv_dbg_if/rtl/adbg_lint_module.sv:561:                out_reg_shift_en <= 1'b1; // For module regs
ips/adv_dbg_if/rtl/adbg_lint_module.sv:621:           out_reg_shift_en <= 1'b1;
ips/adv_dbg_if/rtl/adbg_lint_module.sv:648:           crc_shift_en <= 1'b1;
ips/adv_dbg_if/rtl/adbg_lint_module.sv:711:           if(module_next_state == STATE_Wmatch) tdo_output_sel <= 2'h2;  // This is when the 'match' bit is actually read
ips/adv_dbg_if/rtl/adbg_lint_module.sv:720:           if(module_next_state == STATE_idle) error_reg_en <= 1'b1;
ips/adv_dbg_if/rtl/bytefifo.v:200:	if(~RSTN)             counter <= 4'h0;
ips/adv_dbg_if/rtl/bytefifo.v:201:	else if(EN & PUSH_POPn & push_ok)  counter <= counter + 4'h1;
ips/adv_dbg_if/rtl/bytefifo.v:202:	else if(EN & (~PUSH_POPn) & pop_ok)    counter <= counter - 4'h1;
ips/adv_dbg_if/rtl/adbg_or1k_biu.sv:136:         if(!rd_wrn_i) data_in_reg <= data_i;
ips/fpu/hdl/fpu_v0.1/fpu_norm.sv:108:        if (Mant_shAmt2_D <= 0)
ips/fpu/hdl/fpu_v0.1/fpu_norm.sv:110:        else if (Mant_shAmt2_D <= C_MANT_PRENORM)
ips/fpu/hdl/fpu_v0.1/fpu_norm.sv:133:        else if (Exp_rounded_D <= signed'({2'b0,C_EXP_ZERO})) //underflow
rtl/pulpissimo/safe_domain_reg_if.sv:141:	     reg_if_ack_o  <= 1'b0;
rtl/pulpissimo/safe_domain_reg_if.sv:142:	     reg_if_ack_o_lck <= 1'b0; //cwe-1232 type 2
rtl/pulpissimo/safe_domain_reg_if.sv:145:		    reg_if_ack_o <= 1'b1;
rtl/pulpissimo/safe_domain_reg_if.sv:148:		    reg_if_ack_o <= 1'b0;
rtl/pulpissimo/safe_domain_reg_if.sv:290:	  				if(s_extwake_rise)      r_extevent <= 1'b1;
rtl/pulpissimo/safe_domain_reg_if.sv:292:	  				if(s_extwake_fall)      r_extevent <= 1'b1;
rtl/pulpissimo/safe_domain_reg_if.sv:294:	  				if(r_extevent_sync[0])  r_extevent <= 1'b1;
rtl/pulpissimo/safe_domain_reg_if.sv:296:	  				if(!r_extevent_sync[0]) r_extevent <= 1'b1;
rtl/vip/i2s/i2c_if.v:253:      ShiftRegister[00] <= SDA;
rtl/vip/i2s/i2c_if.v:254:      ShiftRegister[01] <= ShiftRegister[00];
rtl/vip/i2s/i2c_if.v:255:      ShiftRegister[02] <= ShiftRegister[01];
rtl/vip/i2s/i2c_if.v:256:      ShiftRegister[03] <= ShiftRegister[02];
rtl/vip/i2s/i2c_if.v:257:      ShiftRegister[04] <= ShiftRegister[03];
rtl/vip/i2s/i2c_if.v:258:      ShiftRegister[05] <= ShiftRegister[04];
rtl/vip/i2s/i2c_if.v:259:      ShiftRegister[06] <= ShiftRegister[05];
rtl/vip/i2s/i2c_if.v:260:      ShiftRegister[07] <= ShiftRegister[06];
rtl/vip/i2s/i2c_if.v:268:      if (BitCounter < 10) BitCounter <= BitCounter + 1;
rtl/vip/i2s/i2c_if.v:278:            if (ShiftRegister[00] == 0) WrCycle <= 1;
rtl/vip/i2s/i2c_if.v:279:            if (ShiftRegister[00] == 1) RdCycle <= 1;
rtl/vip/i2s/i2c_if.v:374:         if ((SDA == 0) & (SDA_OE == 0)) MACK_Rcvd <= 1;
rtl/vip/i2s/i2c_if.v:441:            if (MACK_Rcvd) SDA_OE <= 1;
rtl/vip/spi_flash/S25fs256s/model/s25fs256s.vhd:1453:            	UniformSec <= false;
rtl/vip/spi_flash/S25fs256s/model/s25fs256s.vhd:1457:            	UniformSec <= false;
rtl/vip/spi_flash/S25fs256s/model/s25fs256s.vhd:1460:            UniformSec <= true;
rtl/vip/spi_flash/S25fs256s/model/s25fs256s.vhd:4069:						IF UniformSec OR (TopBoot AND (SectorErased <= 511)) OR
rtl/vip/spi_flash/S25fs256s/model/s25fs256s.v:1640:                    if ((CLK_PER < 33333 && Latency_code <= 1) || // <= 30MHz
rtl/vip/spi_flash/S25fs256s/model/s25fs256s.v:3601:                            if (Address + Byte_number <= OTPHiAddr)
rtl/vip/spi_flash/S25fs256s/model/s25fs256s.v:3603:                                if (((((Address>=16'h0010 && Address<=16'h00FF))
rtl/vip/spi_flash/S25fs256s/model/s25fs256s.v:4294:                        if (Address + Byte_number <= OTPHiAddr)
rtl/vip/spi_flash/S25fs256s/model/s25fs256s.v:4296:                            if (((((Address>=16'h0010 && Address<=16'h00FF))
rtl/vip/spi_flash/S25fs256s/model/s25fs256s.v:4427:                        if (UniformSec || (TopBoot && SectorErased <= 511) ||
rtl/vip/spi_flash/S25fs256s/model/s25fs256s.v:4934:                        if(read_addr>=OTPLoAddr && read_addr<=OTPHiAddr)
rtl/vip/spi_flash/S25fs256s/model/s25fs256s.v:4966:                            if (Addr_idcfi <= CFILength)
rtl/vip/spi_flash/S25fs256s/model/s25fs256s.v:4983:                            if (Addr_idcfi <= CFILength)
rtl/vip/spi_flash/S25fs256s/model/s25fs256s.v:5004:                        if (Addr_idcfi <= CFILength)
rtl/vip/spi_flash/S25fs256s/model/s25fs256s.v:5023:                            if (addr_bytes <= SFDPHiAddr)
rtl/vip/spi_flash/S25fs256s/model/s25fs256s.v:5050:                            if (addr_bytes <= SFDPHiAddr)
rtl/vip/spi_flash/S25fs256s/model/s25fs256s.v:9407:                    if (Address <= HybAddrHi)
rtl/vip/spi_flash/S25fs256s/model/s25fs256s.v:9460:                    if (Address <= HybAddrHi)
rtl/vip/spi_flash/S25fs256s/utilities/conversions.vhd:372:        if int_rtn_len <= r'length then
